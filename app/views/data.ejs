<%- contentFor('HeaderCss') %>
<link href="/assets/libs/jsvectormap/css/jsvectormap.min.css" rel="stylesheet" type="text/css" />
<link href="/assets/libs/swiper/swiper-bundle.min.css" rel="stylesheet" type="text/css" />
<%- contentFor('body') %>

<style>
  .card {
    background: #ffffff;
    border: 1px solid #e0e0e0;
    border-radius: 10px;
    padding: 20px;
    margin-bottom: 30px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
    position: relative;
  }
  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
  }
  .card-title {
    font-size: 20px;
    font-weight: bold;
    margin: 0;
  }
  .card-filters select {
    margin-left: 10px;
    padding: 5px 10px;
    border-radius: 5px;
    border: 1px solid #ccc;
  }
  .chart-container {
    position: relative;
    width: 100%;
    min-height: 300px;
    height: 400px;
  }
  canvas {
    width: 100% !important;
    height: 100% !important;
  }
  table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 15px;
  }
  table, th, td {
    border: 1px solid #ccc;
  }
  th, td {
    padding: 8px;
    text-align: center;
  }
  th {
    background-color: #f9f9f9;
  }
  #loading {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: none;
  }
  .spinner {
    border: 8px solid #f3f3f3;
    border-top: 8px solid #3498db;
    border-radius: 50%;
    width: 60px;
    height: 60px;
    animation: spin 1s linear infinite;
  }
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
</style>

</head>
<body>
  <div class="d-flex justify-content-end">
  <div class=" mb-3" style=" width: 20%;">
    <div class="input-group ">
        <input type="text" name="calendarPicker" id="calendarPicker" class="form-control" placeholder="Select date range"
            data-provider="flatpickr" data-date-format="d M, Y" data-range-date="true" onchange="applyFilters()">
        <div class="input-group-append">
            <a href="#" id="exportForm" class="btn btn-primary">Export</a>
        </div>
    </div>
  </div>
</div>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const today = new Date().toISOString().split('T')[0];

      const fp = flatpickr("#calendarPicker", {
          mode: "range",
          dateFormat: "Y-m-d",
          onChange: function (selectedDates, dateStr, instance) {
              if (selectedDates.length === 2) {
                  let startDate = new Date(selectedDates[0].getTime() + 86400000);
                  let endDate = new Date(selectedDates[1].getTime() + 86400000);

                  // ตั้งค่าค่าที่แสดงใน input
                  instance.input.value = startDate.toISOString().split('T')[0] + ' - ' + endDate.toISOString().split('T')[0];

                  // เพิ่มค่า start_date และ end_date ใน query string ของฟอร์ม
                  document.querySelector('#exportForm').href = `/data/api/export-company-share?start_date=${startDate.toISOString().split('T')[0]}&end_date=${endDate.toISOString().split('T')[0]}`;
              }
          }
      });
  });
  </script>

<h1>Dashboard</h1>

<div class="card">
  <div class="card-header">
    <div class="card-title">Auction Data</div>
    <div class="card-filters">
      <label for="company">Company:</label>
      <select id="company">
        <option value="all">All</option>
        <% companies.forEach(function(company) { %>
          <option value="<%= company %>"><%= company %></option>
        <% }); %>
      </select>

      <label for="period">Period:</label>
      <select id="period">
        <option value="quarter">Quarter</option>
        <option value="month">Month</option>
      </select>
    </div>
  </div>

  <div class="chart-container">
    <canvas id="myChart"></canvas>
  </div>
  <div id="loading"><div class="spinner"></div></div>
  <div id="data-table-container"></div>
</div>

<div class="card">
  <div class="card-header">
    <div class="card-title">Company Share by Year</div>
    <div class="card-filters">
      <label for="month-select">Month:</label>
      <select id="month-select">
        <option value="all">Year</option>
        <option value="01">January</option>
        <option value="02">February</option>
        <option value="03">March</option>
        <option value="04">April</option>
        <option value="05">May</option>
        <option value="06">June</option>
        <option value="07">July</option>
        <option value="08">August</option>
        <option value="09">September</option>
        <option value="10">October</option>
        <option value="11">November</option>
        <option value="12">December</option>
      </select>
    </div>
  </div>

  <div class="chart-container">
    <canvas id="company-share-chart"></canvas>
  </div>
  
  <div id="company-share-table-container"></div>
</div>

<%- contentFor('FooterJs') %>

<!-- Chart.js -->
<script src="/assets/libs/chart.js/chart.umd.js"></script>

<script>
const ctx = document.getElementById('myChart').getContext('2d');
let chart;

async function fetchData() {
  try {
    document.getElementById('loading').style.display = 'block';

    const company = document.getElementById('company').value;
    const period = document.getElementById('period').value;
    const response = await fetch(`/data/api/data?company=${company}&period=${period}`);
    const result = await response.json();

    const labels = period === 'quarter'
      ? ['Q1', 'Q2', 'Q3', 'Q4']
      : ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

    const datasets = result.map(item => {
      const dataArray = new Array(labels.length).fill(0);
      item.data.forEach(d => {
        dataArray[d.period - 1] = d.count;
      });
      return {
        label: item.year,
        data: dataArray,
        backgroundColor: getRandomColor(),
      };
    });

    if (chart) chart.destroy();

    chart = new Chart(ctx, {
  type: 'bar',
  data: { labels, datasets },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      title: {
        display: true,
        text: 'Auction Data',
      }
    },
    scales: {
      y: { beginAtZero: true }
    }
  }
});

    renderTable(result, labels);

  } catch (error) {
    console.error("Error fetching auction data:", error);
  } finally {
    document.getElementById('loading').style.display = 'none';
  }
}

function renderTable(result, labels) {
  const tableContainer = document.getElementById('data-table-container');
  let tableHTML = '<table><thead><tr><th>Year</th>';
  labels.forEach(label => {
    tableHTML += `<th>${label}</th>`;
  });
  tableHTML += '</tr></thead><tbody>';

  result.forEach(item => {
    tableHTML += `<tr><td>${item.year}</td>`;
    const dataArray = new Array(labels.length).fill(0);
    item.data.forEach(d => {
      dataArray[d.period - 1] = d.count;
    });
    dataArray.forEach(count => {
      tableHTML += `<td>${count}</td>`;
    });
    tableHTML += '</tr>';
  });
  tableHTML += '</tbody></table>';

  tableContainer.innerHTML = tableHTML;
}

function getRandomColor() {
  const r = Math.floor(Math.random() * 156) + 100;
  const g = Math.floor(Math.random() * 156) + 100;
  const b = Math.floor(Math.random() * 156) + 100;
  return `rgba(${r}, ${g}, ${b}, 0.7)`;
}

document.getElementById('company').addEventListener('change', fetchData);
document.getElementById('period').addEventListener('change', fetchData);
fetchData();

// ---------------------------
// Company Share Chart
// ---------------------------
let companyShareChart;

async function fetchCompanyShareData() {
  try {
    const selectedMonth = document.getElementById('month-select').value;
    const response = await fetch(`/data/api/company-share?month=${selectedMonth}`);
    const result = await response.json();

    const companySet = new Set();
    const yearSet = new Set();
    result.forEach(item => {
      yearSet.add(item.year);
      item.data.forEach(row => {
        companySet.add(row.Company);
      });
    });
    const companies = Array.from(companySet);
    const years = Array.from(yearSet).sort();

    const datasets = years.map(year => ({
      label: year,
      data: companies.map(company => {
        const yearData = result.find(item => item.year === year);
        const row = yearData?.data.find(r => r.Company === company);
        return row ? (row.count / yearData.total * 100).toFixed(2) : 0;
      }),
      backgroundColor: getRandomColor(),
    }));

    const ctx2 = document.getElementById('company-share-chart').getContext('2d');
    if (companyShareChart) companyShareChart.destroy();

    companyShareChart = new Chart(ctx2, {
  type: 'bar',
  data: { labels: companies, datasets },
  options: {
    responsive: true,
    maintainAspectRatio: false,  // <<< เพิ่มบรรทัดนี้
    plugins: {
      title: {
        display: true,
        text: 'Company Share by Year',
      },
      tooltip: {
        callbacks: {
          label: ctx => `${ctx.dataset.label}: ${ctx.formattedValue}%`,
        },
      },
    },
    scales: {
      y: {
        beginAtZero: true,
        ticks: { callback: value => value + '%' }
      },
      x: { stacked: false }
    }
  }
});

    renderCompanyShareTable(result, companies, years);

  } catch (error) {
    console.error("Error fetching company share data:", error);
  }
}

function renderCompanyShareTable(result, companies, years) {
  const tableContainer = document.getElementById('company-share-table-container');
  let tableHTML = '<table><thead><tr><th>Company</th>';

  years.forEach(year => {
    tableHTML += `<th>${year} (%)</th>`;
  });
  tableHTML += '</tr></thead><tbody>';

  companies.forEach(company => {
    tableHTML += `<tr><td>${company}</td>`;
    years.forEach(year => {
      const yearData = result.find(item => item.year === year);
      const total = yearData?.total || 0;
      const row = yearData?.data.find(r => r.Company === company);
      const percentage = row && total > 0 ? ((row.count / total) * 100).toFixed(1) : '0.0';
      tableHTML += `<td>${percentage}</td>`;
    });
    tableHTML += '</tr>';
  });

  tableContainer.innerHTML = tableHTML;
}

document.getElementById('month-select').addEventListener('change', fetchCompanyShareData);
fetchCompanyShareData();

</script>

<!-- Vector map-->
<script src="/assets/libs/jsvectormap/js/jsvectormap.min.js"></script>
<script src="/assets/libs/jsvectormap/maps/world-merc.js"></script>

<!--Swiper slider js-->
<script src="/assets/libs/swiper/swiper-bundle.min.js"></script>
