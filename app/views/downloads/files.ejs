<%- contentFor('HeaderCss') %>
    <!-- jsvectormap css -->
    <link href="/assets/libs/jsvectormap/css/jsvectormap.min.css" rel="stylesheet" type="text/css" />

    <!-- Swiper slider css -->
    <link href="/assets/libs/swiper/swiper-bundle.min.css" rel="stylesheet" type="text/css" />
    <%- contentFor('body') %>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
        <style>
            .image-preview {
                width: 100%;
                height: 200px;
                object-fit: cover;
                cursor: pointer;
            }

            .breadcrumb-nav {
                margin-bottom: 20px;
            }

            .card-header {
                position: relative;
                height: 30px;
            }

            .checkbox-top-left {
                position: absolute;
                top: 0;
                left: 0;
                margin: 5px;
            }

            .delete-icon {
                position: absolute;
                top: 0;
                right: 0;
                color: red;
                margin: 5px;
                cursor: pointer;
            }
        </style>
        </head>

        <body>
            <!-- Breadcrumb Navigation -->
            <div id="breadcrumb-nav" class="breadcrumb-nav"></div>
            <div class="row">
                <div class="d-flex justify-content-end mb-3">
                    <button id="allSelectedBtn" class="btn btn-outline-primary">Select All</button>
                    <button id="deleteSelectedBtn" class="btn btn-outline-danger">Delete All</button>
                </div>
                <% folders.forEach(folder=> { %>
                    <div class="col-md-4 mb-3">
                        <div class="card">
                            <div class="card-header">
                                <input type="checkbox" class="file-checkbox checkbox-top-left"
                                    value="<%= folder.path %>">
                                <span class="delete-icon" onclick="deleteItem('<%= folder.path %>')">üóëÔ∏è</span>
                            </div>
                            <div class="card-body text-center">
                                <% if (folder.icon==='üñºÔ∏è' ) { %>
                                    <!-- ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û -->
                                    <img src="/downloads/<%= folder.path %>" class="image-preview"
                                        alt="<%= folder.name %>" data-bs-toggle="modal" data-bs-target="#imageModal"
                                        onclick="showImageInModal('<%= folder.path %>')">
                                    <!-- <a href="/downloads/<%= folder.path %>" class="btn btn-outline-info mt-2"
                                        download>Download Image</a> -->
                                    <% } else if (folder.path.toLowerCase().endsWith('.pdf')) { %>
                                        <!-- ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå PDF -->
                                        <h5 class="card-title">PDF: <%= folder.name %>
                                        </h5>
                                        <iframe src="/downloads/<%= folder.path %>" width="100%"
                                            style="border: none;"></iframe>
                                        <button class="btn btn-outline-info mt-2" data-bs-toggle="modal"
                                            data-bs-target="#pdfModal"
                                            onclick="showPdfInModal('<%= folder.path %>')">View PDF</button>

                                        <% } %>
                            </div>
                        </div>
                    </div>
                    <% }); %>
            </div>


            <!-- Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏ü‡∏•‡πå PDF -->
            <div class="modal fade" id="pdfModal" tabindex="-1" aria-labelledby="pdfModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-fullscreen">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="pdfModalLabel">PDF Viewer</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- ‡πÅ‡∏™‡∏î‡∏á PDF ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô iframe -->
                            <iframe id="pdfIframe" src="" width="100%" height="600px" style="border: none;"></iframe>
                        </div>
                    </div>
                </div>
            </div>



            <!-- Modal img -->
            <div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="imageModalLabel">Image Preview</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <img id="modalImage" src="" class="img-fluid" alt="Image Preview">
                        </div>
                    </div>
                </div>
            </div>

            </div>

            <!-- Bootstrap JS and Popper.js -->
            <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>

            <script>
                // JavaScript to dynamically create the breadcrumb based on window location
                function createBreadcrumb() {
                    const breadcrumbNav = document.getElementById('breadcrumb-nav');
                    const pathParts = window.location.pathname.split('/').filter(part => part); // Split and remove empty parts

                    let fullPath = '/downloads';
                    breadcrumbNav.innerHTML = ''; // Clear existing breadcrumb

                    // Add 'downloads' as the base
                    const downloadsButton = document.createElement('<%= session.user.role === "user" ? "span" : "a" %>');
                    const check = 'user';

                    if ('<%= session.user.role %>' === check) {
                        // If role is 'user', create a badge instead of a link
                        downloadsButton.classList.add('badge', 'bg-primary-subtle', 'text-primary');
                        downloadsButton.textContent = 'downloads';
                        downloadsButton.setAttribute('disabled', 'true');
                    } else {
                        // Normal link for other roles
                        downloadsButton.href = '/downloads';
                        downloadsButton.classList.add('btn', 'btn-outline-primary', 'btn-sm');
                        downloadsButton.textContent = 'downloads';
                    }

                    breadcrumbNav.appendChild(downloadsButton);

                    // Loop through each part of the path after 'downloads'
                    pathParts.slice(1).forEach((part, index) => {
                        fullPath += `/${part}`;

                        // Add separator (slash) before each subsequent part
                        breadcrumbNav.innerHTML += ' / ';

                        if ('<%= session.user.role %>' === check) {
                            // If user role, show badge for folders
                            const folderBadge = document.createElement('span');
                            folderBadge.classList.add('badge', 'bg-primary-subtle', 'text-primary');
                            folderBadge.setAttribute('disabled', 'true');
                            folderBadge.textContent = decodeURIComponent(part);
                            breadcrumbNav.appendChild(folderBadge);
                        } else {
                            // Normal link for other roles
                            const folderButton = document.createElement('a');
                            folderButton.href = fullPath;
                            folderButton.classList.add('btn', 'btn-outline-primary', 'btn-sm');
                            folderButton.textContent = decodeURIComponent(part);
                            breadcrumbNav.appendChild(folderButton);
                        }
                    });

                }

                // Call the function to build the breadcrumb when the page loads
                window.onload = createBreadcrumb;

                // Function to delete a single item
                function deleteItem(filePath) {
                    if (confirm('Are you sure you want to delete ' + filePath + '?')) {
                        // Use fetch to send delete request
                        fetch(`/downloads/delete?path=${encodeURIComponent(filePath)}`, { method: 'DELETE' })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    alert('Item deleted successfully!');
                                    window.location.reload();
                                } else {
                                    alert('Failed to delete the item: ' + data.message);
                                }
                            });
                    }
                }

                let select = false;

                document.getElementById('allSelectedBtn').addEventListener('click', function () {
                    select = !select;
                    document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => checkbox.checked = select);
                });

                // Event listener for 'Delete Selected' button
                document.getElementById('deleteSelectedBtn').addEventListener('click', function () {
                    const selectedFiles = Array.from(document.querySelectorAll('.file-checkbox:checked'))
                        .map(cb => cb.value);

                    if (selectedFiles.length === 0) {
                        alert('No files or folders selected!');
                        return;
                    }

                    if (confirm('Are you sure you want to delete the selected items?')) {
                        // Send the delete request for all selected files
                        fetch(`/downloads/delete-bulk`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ paths: selectedFiles })
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    alert('Selected items deleted successfully!');
                                    window.location.reload();
                                } else {
                                    alert('Failed to delete the selected items: ' + data.message);
                                }
                            });
                    }
                });

                // Show the image in the modal
                function showImageInModal(imagePath) {
                    const modalImage = document.getElementById('modalImage');
                    modalImage.src = '/downloads/' + imagePath;
                }
                // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á PDF ‡πÉ‡∏ô modal
                function showPdfInModal(filePath) {
                    const iframe = document.getElementById('pdfIframe');
                    iframe.src = '/downloads/' + filePath;  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ src ‡∏Ç‡∏≠‡∏á iframe ‡πÉ‡∏´‡πâ‡∏ä‡∏µ‡πâ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå PDF ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
                }


            </script>
        </body>
        <%- contentFor('FooterJs') %>