<%- contentFor('HeaderCss') %>
<!-- jsvectormap css -->
<link href="/assets/libs/jsvectormap/css/jsvectormap.min.css" rel="stylesheet" type="text/css" />

<!-- Swiper slider css -->
<link href="/assets/libs/swiper/swiper-bundle.min.css" rel="stylesheet" type="text/css" />
<%- contentFor('body') %>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <style>
        .image-preview {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }

        .breadcrumb-nav {
            margin-bottom: 20px;
        }

        .card-header {
            position: relative;
            height: 30px;
        }

        .checkbox-top-left {
            position: absolute;
            top: 0;
            left: 0;
            margin: 5px;
        }

        .delete-icon {
            position: absolute;
            top: 0;
            right: 0;
            color: red;
            margin: 5px;
            cursor: pointer;
        }
    </style>
</head>

<body>
    <div class="container my-4">
        <!-- Breadcrumb Navigation -->
        <div id="breadcrumb-nav" class="breadcrumb-nav"></div>
        <div class="d-flex justify-content-end mb-3">
            <% if (folders.every(folder=> folder.icon==='üñºÔ∏è')) { %>
                <button id="loadAllBtn" class="btn btn-outline-success me-2">Load All</button>
                <% } %>
                    <button id="deleteSelectedBtn" class="btn btn-outline-danger">Delete All</button>
        </div>


        <div class="row">
            <% folders.forEach(folder=> { %>
                <div class="col-md-4 mb-3">
                    <div class="card">
                        <div class="card-header">
                            <input type="checkbox" class="file-checkbox checkbox-top-left" value="<%= folder.path %>">
                            <span class="delete-icon" onclick="deleteItem('<%= folder.path %>')">üóëÔ∏è</span>
                        </div>
                        <div class="card-body text-center">
                            <% if (folder.isDirectory) { %>
                                <h5 class="card-title">üìÅ <%= folder.name %>
                                </h5>
                                <a href="/downloads/<%= folder.path %>" class="btn btn-outline-secondary mt-2">Open
                                    Folder</a>
                                <% } else if (folder.icon==='üñºÔ∏è' ) { %>
                                    <img src="/downloads/<%= folder.path %>" class="image-preview"
                                        alt="<%= folder.name %>">
                                    <a href="/downloads/<%= folder.path %>" class="btn btn-outline-info mt-2"
                                        download>Download Image</a>
                                    <% } else { %>
                                        <h5 class="card-title">
                                            <%= folder.icon %>
                                                <%= folder.name %>
                                        </h5>
                                        <% if ((folder.path).toLowerCase().endsWith('.csv')) { %>
                                        <a href="/downloads/<%= folder.path %>" class="btn btn-outline-info mt-2">Open File</a>
                                        <% } else { %>
                                            <a href="/downloads/<%= folder.path%>" class="btn btn-outline-info mt-2" download>Download File</a>
                                        <% } }%>
                        </div>
                    </div>
                </div>
                <% }); %>
        </div>

        <script>
            // JavaScript to dynamically create the breadcrumb based on window location
            function createBreadcrumb() {
                const breadcrumbNav = document.getElementById('breadcrumb-nav');
                const pathParts = window.location.pathname.split('/').filter(part => part); // Split and remove empty parts

                let fullPath = '/downloads';
                breadcrumbNav.innerHTML = ''; // Clear existing breadcrumb

                // Add 'downloads' as the base
                const downloadsButton = document.createElement('a');
                downloadsButton.href = '/downloads';
                downloadsButton.classList.add('btn', 'btn-outline-primary', 'btn-sm');
                downloadsButton.textContent = 'downloads';
                breadcrumbNav.appendChild(downloadsButton);

                // Loop through each part of the path after 'downloads'
                pathParts.slice(1).forEach((part, index) => {
                    fullPath += `/${part}`;

                    // Add separator (slash) before each subsequent part
                    breadcrumbNav.innerHTML += ' / ';

                    // Create a button for each folder in the path
                    const folderButton = document.createElement('a');
                    folderButton.href = fullPath;
                    folderButton.classList.add('btn', 'btn-outline-primary', 'btn-sm');

                    // Decode the URL-encoded part before displaying
                    folderButton.textContent = decodeURIComponent(part);
                    breadcrumbNav.appendChild(folderButton);
                });
            }

            // Call the function to build the breadcrumb when the page loads
            window.onload = createBreadcrumb;

            // Function to delete a single item
            function deleteItem(filePath) {
                if (confirm('Are you sure you want to delete ' + filePath + '?')) {
                    // Use fetch to send delete request
                    fetch(`/downloads/delete?path=${encodeURIComponent(filePath)}`, { method: 'DELETE' })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert('Item deleted successfully!');
                                window.location.reload();
                            } else {
                                alert('Failed to delete the item: ' + data.message);
                            }
                        });
                }
            }

            // Event listener for 'Delete Selected' button
            document.getElementById('deleteSelectedBtn').addEventListener('click', function () {
                const selectedFiles = Array.from(document.querySelectorAll('.file-checkbox:checked'))
                    .map(cb => cb.value);

                if (selectedFiles.length === 0) {
                    alert('No files or folders selected!');
                    return;
                }

                if (confirm('Are you sure you want to delete the selected items?')) {
                    // Send the delete request for all selected files
                    fetch(`/downloads/delete-bulk`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ paths: selectedFiles })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert('Selected items deleted successfully!');
                                window.location.reload();
                            } else {
                                alert('Failed to delete the selected items: ' + data.message);
                            }
                        });
                }
            });


            // Event listener for 'Load All' button
            document.getElementById('loadAllBtn').addEventListener('click', function () {
                const selectedFiles = Array.from(document.querySelectorAll('.file-checkbox:checked'))
                    .map(cb => cb.value);

                if (selectedFiles.length === 0) {
                    alert('No files or folders selected to load!');
                    return;
                }

                const filePaths = selectedFiles.filter(path => !path.endsWith('/')); // ‡πÑ‡∏ü‡∏•‡πå
                const folderPaths = selectedFiles.filter(path => path.endsWith('/')); // ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå

                // ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                filePaths.forEach(filePath => {
                    const link = document.createElement('a');
                    link.href = `/downloads/${encodeURIComponent(filePath)}`;
                    link.download = filePath; // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
                    document.body.appendChild(link);
                    link.click(); // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
                    document.body.removeChild(link); // ‡∏•‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å DOM
                });
            });
        </script>
    </div>
</body>
<%- contentFor('FooterJs') %>